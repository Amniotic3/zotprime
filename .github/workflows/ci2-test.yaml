name: 'Upstream Sync zotero-build'

on:
  schedule:
    - cron:  '0 7 * * 1,4'
    # scheduled at 07:00 every Monday and Thursday
  workflow_dispatch:  # click the button on Github repo!

jobs:
  sync_latest_from_upstream:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream repo

    steps:
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v3
      with:
#        repository: uniuuu/zotero-build
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        ref:  master
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false

    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.4
      with:
        target_sync_branch: master
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.ZB_REPO_SECRET }}
        upstream_sync_branch: master
        upstream_sync_repo: zotero/zotero-build
          #        upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false
      
    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."
    
    # Step 4: Merge master to test
    - name: Merge master -> test
      if: steps.sync.outputs.has_new_commits == 'true'
      uses: devmasx/merge-branch@master
      with:
        type: now
        target_branch: test
        github_token: ${{ secrets.ZB_REPO_SECRET }}        
    
    # Step 5: Display a sample message based on the sync output var 'has_new_commits' continue 2
    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."
    
    # Step 6: Display a sample message based on the sync output var 'has_new_commits' continue 3
    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}




      git push -f origin master
      sed -i "s+uniuuu/sparkapp.*+uniuuu/sparkapp:0.0.$RUN_NUMBER+g" sparkapp/spark-application.yaml
      git add .
      git commit -m 'Github Actions Update Image Version: ${{ github.run_number }}'
      git push origin main
    env:
      RUN_NUMBER: ${{ github.run_number }}

build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUBUSERNAME }}
          password: ${{ secrets.DOCKERHUBTOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./spark-application
          push: true
          tags: uniuuu/sparkapp:0.0.${{ github.run_number }}