apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: streamserver-backendconfig
  namespace: zotprime
spec:
  timeoutSec: 3600
#  healthCheck:
#    checkIntervalSec: 30
#    timeoutSec: 20
#    healthyThreshold: 1
#    unhealthyThreshold: 3
#    type: HTTP
#    requestPath: /health
#    port: 81

---
apiVersion: v1
kind: Service
metadata:
  labels:
    apps: streamserver
  name: streamserver
  namespace: zotprime
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
#    beta.cloud.google.com/backend-config: '{"ports": {"81": "config-broker-ws"}}'
    cloud.google.com/backend-config: '{"default": "streamserver-backendconfig"}'
spec:
  ports:
    - name: streamserver
      port: 81
      targetPort: 81
  selector:
    apps: zotprime-streamserver
  type: ClusterIP
#status:
#  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apps: zotprime-streamserver
  name: zotprime-streamserver
  namespace: zotprime
spec:
  replicas: 1
  selector:
    matchLabels:
      apps: zotprime-streamserver
  strategy: {}
  template:
    metadata:
      labels:
        apps: zotprime-streamserver
      name: zotprime-streamserver
    spec:
      containers:
        - image: uniuu/zotprime-streamserver:v2.7.0
          name: zotprime-streamserver
          ports:
            - containerPort: 81           
          resources:
            limits:
              memory: 256Mi
#              cpu: "0.5"
            requests:
              memory: 256Mi
              cpu: "1"
          livenessProbe:
            httpGet:
              path: /health
              port: 81
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /health
              port: 81
      priorityClassName: medium-priority      
      restartPolicy: Always
      securityContext: {}
status: {}
