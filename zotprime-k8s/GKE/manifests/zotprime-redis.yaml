apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: zotprime
data:
  redis.conf:  |+
    cluster-enabled no
    appendonly yes
    protected-mode no
    dir /data
    port 6379

# cluster-node-timeout 15000
# cluster-config-file /data/nodes.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-probes
  namespace: zotprime
data:
  readiness.sh: |-
    #!/bin/sh
    pingResponse="$(redis-cli -h localhost ping)"
    if [ "$?" -eq "124" ]; then
      echo "PING timed out"
      exit 1
    fi
    if [ "$pingResponse" != "PONG"]; then
      echo "$pingResponse"
      exit 1
    fi
  liveness.sh: |-
    #!/bin/sh
    pingResponse="$(redis-cli -h localhost ping | head -n1 | awk '{print $1;}')"
    if [ "$?" -eq "124" ]; then
      echo "PING timed out"
      exit 1
    fi
    if [ "$pingResponse" != "PONG"] && [ "$pingResponse" != "LOADING" ] && [ "$pingResponse" != "MASTERDOWN" ]; then
      echo "$pingResponse"
      exit 1
    fi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: zotprime
#  annotations:
#    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    apps: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    apps: zotprime-redis
  clusterIP: None
#  publishNotReadyAddresses: True


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zotprime-redis
  namespace: zotprime
  labels:
    apps: zotprime-redis
spec:
  serviceName: "redis-service"
  replicas: 1
  selector:
    matchLabels:
      apps: zotprime-redis
  template:
    metadata:
      labels:
        apps: zotprime-redis
    spec:
      terminationGracePeriodSeconds: 20
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: uniuu/zotprime-redis:v2.8.0
        command:
          - "redis-server"
        args:
          - "/conf/redis.conf"
          - "--protected-mode"
          - "no"
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            memory: "100Mi"
        ports:
            - name: redis
              containerPort: 6379
              protocol: "TCP"
            - name: cluster
              containerPort: 16379
              protocol: "TCP"
        startupProbe:
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 20
          tcpSocket:
            port: redis
        livenessProbe:
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command: ["sh", "-c", "/probes/liveness.sh"]
        readinessProbe:
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command: ["sh", "-c", "/probes/readiness.sh"]
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: dataredis
          mountPath: /data
          readOnly: false
        - name: probes
          mountPath: /probes
          readOnly: true
      priorityClassName: high-priority
      volumes:
      - name: conf
        configMap:
          name: redis-config
          defaultMode: 0755
      - name: probes
        configMap:
          name: redis-probes
          defaultMode: 0555
  volumeClaimTemplates:
  - metadata:
      name: dataredis
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
