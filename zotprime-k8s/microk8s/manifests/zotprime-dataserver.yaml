apiVersion: v1
kind: ConfigMap
metadata:
  name: dataserver-config
  namespace: zotprime
data:
  init.sh: |
    #!/bin/sh

    set -eux

    cd /var/www/zotero/misc && ./init-mysql.sh
    cd /var/www/zotero/misc && ./db_update.sh
    aws --endpoint-url "http://minio:9000" s3 mb s3://zotero
    aws --endpoint-url "http://minio:9000" s3 mb s3://zotero-fulltext
    aws --endpoint-url "http://localstack:4575" sns create-topic --name zotero
---
apiVersion: v1
kind: Service
metadata:
  labels:
    apps: dataserver
  name: dataserver
  namespace: zotprime
spec:
  ports:
    - name: dataserver-api
      port: 80
      targetPort: 80
#    - name: s3
#      port: 8082
#      targetPort: 8082
  selector:
    apps: zotprime-dataserver
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apps: zotprime-dataserver
  name: zotprime-dataserver
  namespace: zotprime
spec:
  replicas: 1
  selector:
    matchLabels:
      apps: zotprime-dataserver
  strategy: {}
  template:
    metadata:
      labels:
        apps: zotprime-dataserver
      name: zotprime-dataserver
    spec:
      containers:
        - image: uniuu/zotprime-dataserver:v2.8.0
          imagePullPolicy: Always
          name: zotprime-dataserver
          ports:
            - containerPort: 80
#            - containerPort: 8082
          env:
            - name: DSURI
              value: http://api.projectdev.net/
            - name: S3POINTURI
              value: s3min.projectdev.net
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-xc", 'sleep 120; bash /tmp/_conf/init.sh ; exit 0' ]
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 160
            periodSeconds: 30
#            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 150
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /
              port: 80
          resources:
            limits:
              memory: 512Mi
#              cpu: "0.3"
            requests:
              memory: 512Mi
              cpu: "1"
          volumeMounts:
            - name: dataserver-config
              mountPath: "/tmp/_conf"
              readOnly: true
      priorityClassName: low-priority
      restartPolicy: Always
      hostAliases:
        - ip: "10.30.11.11"
          hostnames:
          - "s3min.projectdev.net"
      securityContext: {}
      volumes:
        - name: dataserver-config
          configMap:
            name: dataserver-config
status: {}
